How To Update Assembly Version Number Automatically

http://www.codeproject.com/Articles/31236/How-To-Update-Assembly-Version-Number-Automaticall

The Problem

I suppose I am not the only one who does not like the version numbers automatically generated by Visual Studio when you specify something like the following in your AssemblyInfo.cs file:

[assembly: AssemblyVersion("2.7.*.*")] 

In the other hand, I would like to specify those numbers automatically during the build process. Moreover it would be great to have an ability to change the whole version number or just 
increase the latest part of it (build number).  

Of course, you may say that such an operation can simply be done manually. It is true for one or two assemblies. But our usual project contains about 10-15 different assemblies and we 
would like to have a version number in all of them synchronized.

The Solution:

So we need some utility which will perform all the described tasks automatically and which we can call from our build script. The presented simple program allows to change the whole 
version number in AssemblyInfo files or just increase the number of the build.

To use this program, just call AssemblyInfoUtil.exe with two parameters. The first parameter is the path to AssemblyInfo.cs file that you would like to modify. The second parameter tells 
the program how to modify the version number attribute. It can be one of the following options:

-set:<New Version Number>

Set the version number to the specified one.

-inc:<Parameter Index>

Simply increase the number of one parameter in version string by 1. Here "Parameter Index" can be any number from 1 to 4. For 1 - the major version number will be increased, for 2 - the minor one and so on.
Examples

AssemblyInfoUtil.exe -set:3.1.7.53 "C:\Program Files\MyProject1\AssemblyInfo.cs"

Set the version string to "3.1.7.53".

AssemblyInfoUtil.exe -inc:4 AssemblyInfo.cs

Increase the last (revision) number. So in our case it will become 54.


LUIS DE DIEGO:

//If the command line parameters do not specify the index, lets begin to update all the version number, starting with the revision(0.0.0.x) until the mayor version(x.0.0.0)
//  the max number is 65534 for each.
// When the revision reach the 65534, then start again in 0, and the Build Number add one and so on.

//      Major Version
//      Minor Version 
//      Build Number
//      Revision 

Adding this lines to the BuildEvents/Pre-build event command line, the system will automatically change the revision numbers only in Release build.
if $(ConfigurationName) == Release (
"D:\Desarrollo\Personales\!ProyectosGlobales\AssemblyInfoUtil\bin\x86\Release\AssemblyInfoUtil.exe" "D:\Desarrollo\Personales\FILE_MAINTENANCE\WIA_FILE_MAINTENANCE\Properties\AssemblyInfo.cs"
)

Adding this lines to the BuildEvents/Post-build event command line, the system will automatically change the revision numbers only in Release build for the InstallShield LE.
if $(ConfigurationName) == Release (
"D:\Desarrollo\Personales\!ProyectosGlobales\AssemblyInfoUtil\bin\x86\Release\AssemblyInfoUtil.exe" "D:\Desarrollo\Personales\FILE_MAINTENANCE\InstallShieldFileMaintenance\InstallShieldFileMaintenance.isl"
)

